from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.types import Message
from datetime import datetime
import json
from pathlib import Path

from bot.keyboards import main_menu

router = Router()

PROMO_FILE = Path(__file__).parent.parent / "data" / "promotions.json"

def load_promo():
    try:
        with open(PROMO_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
        title = data.get("title")
        description = data.get("description")
        valid_until = data.get("valid_until")
        if not (title and description and valid_until):
            return None
        until = datetime.strptime(valid_until, "%Y-%m-%d").date()
        if datetime.now().date() > until:
            return None
        return {
            "title": title,
            "description": description,
            "valid_until": until.strftime("%d.%m.%Y")
        }
    except Exception:
        return None

@router.message(StateFilter(None), F.text == "üî• –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏")
async def show_promotions(message: Message):
    promo = load_promo()
    if not promo:
        await message.answer(
            "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫—Ü–∏–π –Ω–µ—Ç.\n"
            "–ó–∞–≥–ª—è–Ω–∏—Ç–µ –ø–æ–∑–∂–µ ‚Äî —É –Ω–∞—Å —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø–æ—è–≤–ª—è—é—Ç—Å—è –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!",
            reply_markup=main_menu()
        )
        return
    text = (
        f"üî• <b>{promo['title']}</b>\n\n"
        f"{promo['description']}\n\n"
        f"‚è≥ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: <b>{promo['valid_until']}</b>"
    )
    await message.answer(text, reply_markup=main_menu(), parse_mode="HTML")
