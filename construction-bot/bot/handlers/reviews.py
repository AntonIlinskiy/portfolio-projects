from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, FSInputFile
from collections import defaultdict
from bot.keyboards import main_menu
import os

router = Router()

# üñº –ü—É—Ç–∏ –∫ —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç—ã –æ—Ç–∑—ã–≤–æ–≤
BASE = os.path.join(os.path.dirname(os.path.dirname(__file__)), "data", "reviews")
REVIEWS = [
    {
        "photo": os.path.join(BASE, "review1.jpg"),
        "text": "¬´–°–¥–µ–ª–∞–ª–∏ —Ä–µ–º–æ–Ω—Ç –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ —Å—Ä–æ–∫ –∏ –æ—á–µ–Ω—å –∞–∫–∫—É—Ä–∞—Ç–Ω–æ. –ö–æ–º–∞–Ω–¥–∞ ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã¬ª\n‚Äî –ê–Ω–Ω–∞, –ú–æ—Å–∫–≤–∞",
    },
    {
        "photo": os.path.join(BASE, "review2.jpg"),
        "text": "¬´–°—Ç—Ä–æ–∏–ª–∏ –¥–æ–º –ø–æ –ø—Ä–æ–µ–∫—Ç—É. –ö–∞—á–µ—Å—Ç–≤–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ä–∞–±–æ—Ç—ã –Ω–∞ –≤—ã—Å–æ—Ç–µ, –≤—Å–µ–º —Å–æ–≤–µ—Ç—É—é!¬ª\n‚Äî –°–µ—Ä–≥–µ–π, –ú–û",
    },
    {
        "photo": os.path.join(BASE, "review3.jpg"),
        "text": "¬´–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ + —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è. –ü–æ–º–æ–≥–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±—é–¥–∂–µ—Ç –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ –∫–∞—á–µ—Å—Ç–≤–∞.¬ª\n‚Äî –ò—Ä–∏–Ω–∞, –ú–æ—Å–∫–≤–∞",
    },
]

# –ü–æ–∑–∏—Ü–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–ø—Ä–æ—Å—Ç–æ–π —Ü–∏–∫–ª –±–µ–∑ FSM)
_positions = defaultdict(int)

def _reviews_kb() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤")],
            [KeyboardButton(text="‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")],
        ],
        resize_keyboard=True
    )

async def _send_review(message: Message, idx: int):
    item = REVIEWS[idx]
    photo_path = item["photo"]
    if not os.path.exists(photo_path):
        await message.answer(f"‚ö†Ô∏è –§–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {os.path.basename(photo_path)}")
        return
    await message.answer_photo(
        photo=FSInputFile(photo_path),
        caption=item["text"],
        reply_markup=_reviews_kb(),
    )

@router.message(F.text == "üí¨ –û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤")
async def reviews_open(message: Message):
    _positions[message.from_user.id] = 0
    await _send_review(message, 0)

@router.message(F.text == "‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π –æ—Ç–∑—ã–≤")
async def reviews_next(message: Message):
    uid = message.from_user.id
    _positions[uid] = (_positions[uid] + 1) % len(REVIEWS)
    await _send_review(message, _positions[uid])

@router.message(F.text == "‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def reviews_back_to_main(message: Message):
    await message.answer("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu())