# bot/handlers/request.py
from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

router = Router()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def cancel_kb():
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]],
        resize_keyboard=True
    )

def share_phone_kb():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)],
            [KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]
        ],
        resize_keyboard=True
    )

def main_kb():
    # –µ—Å–ª–∏ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å main_menu() ‚Äî –º–æ–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—ë –≤–º–µ—Å—Ç–æ —ç—Ç–æ–π –∑–∞–≥–ª—É—à–∫–∏
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìã –£—Å–ª—É–≥–∏")],
            [KeyboardButton(text="üìÇ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ")],
            [KeyboardButton(text="üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")]
        ],
        resize_keyboard=True
    )

class RequestForm(StatesGroup):
    name = State()
    phone = State()
    comment = State()

# –°—Ç–∞—Ä—Ç –∑–∞—è–≤–∫–∏
@router.message(F.text == "üìù –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
async def request_start(message: Message, state: FSMContext):
    await state.set_state(RequestForm.name)
    await message.answer("–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?", reply_markup=cancel_kb())

# –ò–º—è ‚Üí —Ç–µ–ª–µ—Ñ–æ–Ω
@router.message(RequestForm.name, F.text.len() > 1)
async def request_got_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text.strip())
    await state.set_state(RequestForm.phone)

    # –ø–æ–ø—Ä–æ–±—É–µ–º –≤–∑—è—Ç—å —Ç–µ–ª–µ–≥—Ä–∞–º-–Ω–æ–º–µ—Ä, –µ—Å–ª–∏ –µ—Å—Ç—å
    phone_hint = None
    if message.from_user and message.from_user.username:
        phone_hint = f"@{message.from_user.username}"

    text = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º¬ª)."
    if phone_hint:
        text += f"\n(–ú–æ–∂–µ–º —Å–≤—è–∑–∞—Ç—å—Å—è –∏ —á–µ—Ä–µ–∑ Telegram: {phone_hint})"

    await message.answer(text, reply_markup=share_phone_kb())

# –¢–µ–ª–µ—Ñ–æ–Ω: —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–∞–∫—Ç
@router.message(RequestForm.phone, F.contact)
async def request_got_contact(message: Message, state: FSMContext):
    await state.update_data(phone=message.contact.phone_number)
    await state.set_state(RequestForm.comment)
    await message.answer("–ö–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É:", reply_markup=cancel_kb())

# –¢–µ–ª–µ—Ñ–æ–Ω: –≤—Ä—É—á–Ω—É—é
@router.message(RequestForm.phone, F.text)
async def request_got_phone_text(message: Message, state: FSMContext):
    raw = message.text.strip()
    digits = "".join(ch for ch in raw if ch.isdigit())
    if len(digits) < 10:
        await message.answer("–ü–æ—Ö–æ–∂–µ –Ω–∞ –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä. –£–∫–∞–∂–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º.")
        return
    if not raw.startswith("+"):
        raw = "+" + digits
    await state.update_data(phone=raw)
    await state.set_state(RequestForm.comment)
    await message.answer("–ö–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É:", reply_markup=cancel_kb())

# –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ‚Üí —Ñ–∏–Ω–∞–ª
@router.message(RequestForm.comment, F.text)
async def request_finish(message: Message, state: FSMContext):
    await state.update_data(comment=message.text.strip())
    data = await state.get_data()
    await state.clear()

    # —Å—é–¥–∞ –º–æ–∂–Ω–æ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å ID –∞–¥–º–∏–Ω–∞, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫—É –≤ –ª–∏—á–∫—É
    text = (
        "‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n\n"
        f"–ò–º—è: {data.get('name')}\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone')}\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {data.get('comment')}"
    )
    await message.answer(text, reply_markup=main_kb())

# –û—Ç–º–µ–Ω–∞
@router.message(F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
async def request_cancel(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("–û—Ç–º–µ–Ω–µ–Ω–æ. –í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_kb())
