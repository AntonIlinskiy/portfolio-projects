from aiogram import Router, types
from services.car_cost_service import get_final_car_cost
from urllib.parse import urlparse

router = Router()

def is_valid_avito_url(url: str) -> bool:
    parsed = urlparse(url)
    return (
        "avito.ru" in parsed.netloc and
        "/avtomobili/" in parsed.path
    )

def is_valid_drom_url(url: str) -> bool:
    parsed = urlparse(url)
    return "drom.ru" in parsed.netloc and "/cars/" in parsed.path

@router.message()
async def handle_link(message: types.Message):
    text = message.text.strip()

    if is_valid_avito_url(text) or is_valid_drom_url(text):
        await message.answer("‚è≥ –ü—ã—Ç–∞—é—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Å—Å—ã–ª–∫–µ...")

        result = get_final_car_cost(text)
        if not result:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—à–∏–Ω–µ")
            return

        await message.answer(
            f"üöó –†–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ:\n\n"
            f"–¶–µ–Ω–∞ –Ω–∞ —Å–∞–π—Ç–µ: {result['base_price']} ‚ÇΩ\n"
            f"–î–æ—Å—Ç–∞–≤–∫–∞: {result['delivery_cost']} ‚ÇΩ\n"
            f"–¢–∞–º–æ–∂–Ω—è: {result['customs_fee']} ‚ÇΩ\n"
            f"–£—Å–ª—É–≥–∏: {result['service_fee']} ‚ÇΩ\n\n"
            f"üí∞ –ò—Ç–æ–≥–æ: {result['total_cost']} ‚ÇΩ"
        )
    else:
        await message.answer("üìé –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∞–≤—Ç–æ —Å Avito –∏–ª–∏ Drom.")
