from typing import Optional, Dict

from services.parsers.avito_parser import AvitoCarParser
from services.parsers.drom_parser import DromCarParser
from services.cost_calculator import calculate_total_cost


def get_final_car_cost(url: str) -> Optional[Dict[str, int]]:
    print("‚ñ∂Ô∏è –í—ã–∑–æ–≤ get_final_car_cost")

    # –í—ã–±–æ—Ä –ø–∞—Ä—Å–µ—Ä–∞ –ø–æ –¥–æ–º–µ–Ω—É
    if "avito.ru" in url:
        parser = AvitoCarParser(url)
    elif "drom.ru" in url:
        parser = DromCarParser(url)
    else:
        print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —Å—Å—ã–ª–∫–∏")
        return None

    car_info = parser.get_info()
    print("üßæ car_info –ø–æ–ª—É—á–µ–Ω:", car_info)

    if not car_info:
        print("‚ùå car_info –ø—É—Å—Ç–æ–π –∏–ª–∏ None")
        return None

    base_price = car_info.get("price")
    print("üí∞ –ò–∑–≤–ª–µ—á—ë–Ω base_price:", base_price)

    cost_result = calculate_total_cost(base_price)
    return cost_result


# –õ–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç
if __name__ == "__main__":
    # üîß –ü–æ–¥—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å—Å—ã–ª–∫—É —Å Avito –∏–ª–∏ Drom –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    test_url = "https://auto.drom.ru/moskva/cars/bmw/3-series/1234567890.html"

    result = get_final_car_cost(test_url)
    print("üì¶ –†–µ–∑—É–ª—å—Ç–∞—Ç get_final_car_cost:", result)

    if result:
        for key, value in result.items():
            print(f"{key}: {value} ‚ÇΩ")
    else:
        print("–û—à–∏–±–∫–∞: —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
