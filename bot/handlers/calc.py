from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from bot.keyboards import main_menu

router = Router()

class CalcFSM(StatesGroup):
    area = State()
    repair_type = State()
    finish = State()

BTN_BACK = KeyboardButton(text="üîô –ù–∞–∑–∞–¥")
BTN_MAIN = KeyboardButton(text="‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

def type_kb():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π"), KeyboardButton(text="–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π")],
            [BTN_BACK], [BTN_MAIN]
        ],
        resize_keyboard=True
    )

def finish_kb():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ë–∞–∑–æ–≤—ã–π"), KeyboardButton(text="–°—Ç–∞–Ω–¥–∞—Ä—Ç"), KeyboardButton(text="–ü—Ä–µ–º–∏—É–º")],
            [BTN_BACK], [BTN_MAIN]
        ],
        resize_keyboard=True
    )

@router.message(F.text == "üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")
async def calc_start(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –ø–æ–º–µ—â–µ–Ω–∏—è –≤ –º¬≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 54):", reply_markup=ReplyKeyboardMarkup(
        keyboard=[[BTN_BACK], [BTN_MAIN]],
        resize_keyboard=True
    ))
    await state.set_state(CalcFSM.area)

@router.message(CalcFSM.area, F.text.regexp(r"^\d{1,4}$"))
async def calc_set_area(message: Message, state: FSMContext):
    area = int(message.text)
    if area == 0:
        await message.answer("–ü–ª–æ—â–∞–¥—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å 0. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ –º¬≤:")
        return
    await state.update_data(area=area)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–µ–º–æ–Ω—Ç–∞:", reply_markup=type_kb())
    await state.set_state(CalcFSM.repair_type)

@router.message(CalcFSM.area)
async def calc_area_invalid(message: Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (–º¬≤), –Ω–∞–ø—Ä–∏–º–µ—Ä: 42")

@router.message(CalcFSM.repair_type, F.text.in_(["–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π", "–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π"]))
async def calc_set_type(message: Message, state: FSMContext):
    await state.update_data(repair_type=message.text)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –æ—Ç–¥–µ–ª–∫–∏:", reply_markup=finish_kb())
    await state.set_state(CalcFSM.finish)

@router.message(CalcFSM.repair_type, F.text == "üîô –ù–∞–∑–∞–¥")
async def calc_back_from_type(message: Message, state: FSMContext):
    await state.set_state(CalcFSM.area)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å –ø–æ–º–µ—â–µ–Ω–∏—è –≤ –º¬≤:")

@router.message(CalcFSM.finish, F.text.in_(["–ë–∞–∑–æ–≤—ã–π", "–°—Ç–∞–Ω–¥–∞—Ä—Ç", "–ü—Ä–µ–º–∏—É–º"]))
async def calc_set_finish(message: Message, state: FSMContext):
    await state.update_data(finish=message.text)
    data = await state.get_data()
    area = data["area"]
    repair_type = data["repair_type"]
    finish = data["finish"]

    # –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∞–≤–∫–∏ (—Ä—É–±/–º¬≤) ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏–º–µ—Ä, –ø–æ–ø—Ä–∞–≤–∏–º –ª–µ–≥–∫–æ
    base = 2200 if repair_type == "–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π" else 4500
    k_finish = {"–ë–∞–∑–æ–≤—ã–π": 1.0, "–°—Ç–∞–Ω–¥–∞—Ä—Ç": 1.25, "–ü—Ä–µ–º–∏—É–º": 1.6}[finish]

    work = int(base * k_finish * area)
    materials = int(work * 0.45)           # –ø—Ä–∏–∫–∏–¥–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ (45% –æ—Ç —Ä–∞–±–æ—Ç)
    management = int(work * 0.07)          # –≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
    total = work + materials + management

    text = (
        "üìê –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á—ë—Ç\n\n"
        f"–ü–ª–æ—â–∞–¥—å: {area} –º¬≤\n"
        f"–¢–∏–ø —Ä–µ–º–æ–Ω—Ç–∞: {repair_type}\n"
        f"–û—Ç–¥–µ–ª–∫–∞: {finish}\n\n"
        f"–†–∞–±–æ—Ç—ã: {work:,} ‚ÇΩ\n"
        f"–ú–∞—Ç–µ—Ä–∏–∞–ª—ã: {materials:,} ‚ÇΩ\n"
        f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–º: {management:,} ‚ÇΩ\n"
        f"‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî ‚Äî\n"
        f"–ò—Ç–æ–≥–æ: {total:,} ‚ÇΩ\n\n"
        "‚ö†Ô∏è –≠—Ç–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å–º–µ—Ç–∞. –î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞ –æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É."
    ).replace(",", " ")

    await state.clear()
    await message.answer(text, reply_markup=main_menu())

@router.message(CalcFSM.finish, F.text == "üîô –ù–∞–∑–∞–¥")
async def calc_back_from_finish(message: Message, state: FSMContext):
    await state.set_state(CalcFSM.repair_type)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–µ–º–æ–Ω—Ç–∞:", reply_markup=type_kb())

@router.message(F.text == "‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def calc_back_main(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu())
